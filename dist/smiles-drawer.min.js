!function e(t,i,r){function n(s,o){if(!i[s]){if(!t[s]){var l="function"==typeof require&&require;if(!o&&l)return l(s,!0);if(a)return a(s,!0);var g=new Error("Cannot find module '"+s+"'");throw g.code="MODULE_NOT_FOUND",g}var h=i[s]={exports:{}};t[s][0].call(h.exports,function(e){var i=t[s][1][e];return n(i||e)},h,h.exports,e,t,i,r)}return i[s].exports}for(var a="function"==typeof require&&require,s=0;s<r.length;s++)n(r[s]);return n}({1:[function(e,t,i){"use strict";var r=e("./src/Drawer.js"),n=function(e){return e&&e.__esModule?e:{default:e}}(r),a={Version:"1.0.0"};a.clean=function(e){return e.replace(/[^A-Za-z0-9@\.\+\-\?!\(\)\[\]\{\}\/\\=#\$:\*]/g,"")},a.apply=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"canvas[data-smiles]",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"light",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=new n.default(e),o=document.querySelectorAll(t),l=0;l<o.length;l++)!function(){var e=o[l];a.parse(e.getAttribute("data-smiles"),function(t){s.draw(t,e,i,!1)},function(e){r&&r(e)})}()},a.parse=function(e,t,i){try{t&&t(a.Parser.parse(e))}catch(e){i&&i(e)}},Array.prototype.fill||Object.defineProperty(Array.prototype,"fill",{value:function(e){if(null==this)throw new TypeError("this is null or not defined");for(var t=Object(this),i=t.length>>>0,r=arguments[1],n=r>>0,a=n<0?Math.max(i+n,0):Math.min(n,i),s=arguments[2],o=void 0===s?i:s>>0,l=o<0?Math.max(i+o,0):Math.min(o,i);a<l;)t[a]=e,a++;return t}})},{"./src/Drawer.js":2}],2:[function(e,t,i){"use strict";function r(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}return Array.from(e)}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(i,"__esModule",{value:!0});var a=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),s=e("./MathHelper"),o=function(e){return e&&e.__esModule?e:{default:e}}(s),l=function(){function e(t){n(this,e),this.graph=null,this.ringIdCounter=0,this.ringConnectionIdCounter=0,this.canvasWrapper=null,this.totalOverlapScore=0,this.defaultOptions={width:500,height:500,bondThickness:.6,bondLength:14.4,shortBondLength:12.24,bondSpacing:2.592,atomVisualization:"default",isomeric:!1,debug:!1,terminalCarbons:!1,explicitHydrogens:!0,compactDrawing:!0,fontSizeLarge:6,fontSizeSmall:4,themes:{dark:{C:"#fff",O:"#e74c3c",N:"#3498db",F:"#27ae60",CL:"#16a085",BR:"#d35400",I:"#8e44ad",P:"#d35400",S:"#f1c40f",B:"#e67e22",SI:"#e67e22",H:"#fff",BACKGROUND:"#141414"},light:{C:"#222",O:"#e74c3c",N:"#3498db",F:"#27ae60",CL:"#16a085",BR:"#d35400",I:"#8e44ad",P:"#d35400",S:"#f1c40f",B:"#e67e22",SI:"#e67e22",H:"#222",BACKGROUND:"#fff"}}},this.opts=this.extend(!0,this.defaultOptions,t),this.opts.halfBondSpacing=this.opts.bondSpacing/2,this.opts.bondLengthSq=this.opts.bondLength*this.opts.bondLength,this.opts.halfFontSizeLarge=this.opts.fontSizeLarge/2,this.opts.quarterFontSizeLarge=this.opts.fontSizeLarge/4,this.opts.fifthFontSizeSmall=this.opts.fontSizeSmall/5,this.theme=this.opts.themes.dark}return a(e,[{key:"extend",value:function(){var e=this,t={},i=!1,r=0,n=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(i=arguments[0],r++);for(;r<n;r++){var a=arguments[r];!function(r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(i&&"[object Object]"===Object.prototype.toString.call(r[n])?t[n]=e.extend(!0,t[n],r[n]):t[n]=r[n])}(a)}return t}},{key:"draw",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"light",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(this.data=e,this.canvasWrapper=new SmilesDrawer.CanvasWrapper(t,this.opts.themes[i],this.opts),this.infoOnly=r,this.ringIdCounter=0,this.ringConnectionIdCounter=0,this.graph=new SmilesDrawer.Graph(e,this.opts.isomeric),this.rings=[],this.ringConnections=[],this.originalRings=[],this.originalRingConnections=[],this.bridgedRing=!1,this.initRings(),this.annotateStereochemistry(),!this.opts.explicitHydrogens)for(var n=0;n<this.graph.vertices.length;n++)"H"===this.graph.vertices[n].value.element&&(this.graph.vertices[n].value.isDrawn=!1);if(this.opts.isomeric&&this.annotateStereochemistry(),!this.infoOnly){this.position(),this.restoreRingInformation(),this.resolvePrimaryOverlaps();var a=this.getOverlapScore();this.totalOverlapScore=this.getOverlapScore().total;for(var n=0;n<this.graph.edges.length;n++){var s=this.graph.edges[n];if(this.isEdgeRotatable(s)){var l=this.getTreeDepth(s.sourceId,s.targetId),g=this.getTreeDepth(s.targetId,s.sourceId),h=s.targetId,d=s.sourceId;l>g&&(h=s.sourceId,d=s.targetId);if(this.getSubtreeOverlapScore(d,h,a.vertexScores).value>1){var u=this.graph.vertices[h],c=this.graph.vertices[d],v=c.getNeighbours(h);if(1===v.length){var p=this.graph.vertices[v[0]],f=p.position.getRotateAwayFromAngle(u.position,c.position,o.default.toRad(120));this.rotateSubtree(p.id,c.id,f,c.position);var m=this.getOverlapScore().total;m>this.totalOverlapScore?this.rotateSubtree(p.id,c.id,-f,c.position):this.totalOverlapScore=m}else if(2==v.length){if(c.value.rings.length+u.value.rings.length>0)continue;var b=this.graph.vertices[v[0]],S=this.graph.vertices[v[1]],w=b.position.getRotateAwayFromAngle(u.position,c.position,o.default.toRad(120)),y=S.position.getRotateAwayFromAngle(u.position,c.position,o.default.toRad(120));this.rotateSubtree(b.id,c.id,w,c.position),this.rotateSubtree(S.id,c.id,y,c.position);var R=this.getOverlapScore().total;R>this.totalOverlapScore?(this.rotateSubtree(b.id,c.id,-w,c.position),this.rotateSubtree(S.id,c.id,-y,c.position)):this.totalOverlapScore=R}a=this.getOverlapScore()}}}this.resolveSecondaryOverlaps(a.scores),this.canvasWrapper.scale(this.graph.vertices),this.opts.compactDrawing&&"default"===this.opts.atomVisualization&&this.initPseudoElements(),this.drawEdges(this.opts.debug),this.drawVertices(this.opts.debug),this.canvasWrapper.reset()}}},{key:"edgeRingCount",value:function(e){var t=this.graph.edges[e],i=this.graph.vertices[t.sourceId],r=this.graph.vertices[t.targetId];return Math.min(i.value.rings.length,r.value.rings.length)}},{key:"getBridgedRings",value:function(){for(var e=[],t=0;t<this.rings.length;t++)this.rings[t].isBridged&&e.push(this.rings[t]);return e}},{key:"getFusedRings",value:function(){for(var e=[],t=0;t<this.rings.length;t++)this.rings[t].isFused&&e.push(this.rings[t]);return e}},{key:"getSpiros",value:function(){for(var e=[],t=0;t<this.rings.length;t++)this.rings[t].isSpiro&&e.push(this.rings[t]);return e}},{key:"printRingInfo",value:function(){for(var e="",t=0;t<this.rings.length;t++){var i=this.rings[t];e+=i.id+";",e+=i.members.length+";",e+=i.neighbours.length+";",e+=i.isSpiro?"true;":"false;",e+=i.isFused?"true;":"false;",e+=i.isBridged?"true;":"false;",e+=i.rings.length+";",e+="\n"}return e}},{key:"getTotalOverlapScore",value:function(){return this.totalOverlapScore}},{key:"getRingCount",value:function(){return this.rings.length}},{key:"hasBridgedRing",value:function(){return this.bridgedRing}},{key:"getHeavyAtomCount",value:function(){for(var e=0,t=0;t<this.graph.vertices.length;t++)"H"!==this.graph.vertices[t].value.element&&e++;return e}},{key:"getRingbondType",value:function(e,t){if(e.value.getRingbondCount()<1||t.value.getRingbondCount()<1)return null;for(var i=0;i<e.value.ringbonds.length;i++)for(var r=0;r<t.value.ringbonds.length;r++)if(e.value.ringbonds[i].id===t.value.ringbonds[r].id)return"-"===e.value.ringbonds[i].bondType?t.value.ringbonds[r].bond:e.value.ringbonds[i].bond;return null}},{key:"initRings",value:function(){for(var e=new Map,t=this.graph.vertices.length-1;t>=0;t--){var i=this.graph.vertices[t];if(0!==i.value.ringbonds.length)for(var n=0;n<i.value.ringbonds.length;n++){var a=i.value.ringbonds[n].id;if(e.has(a)){var s=i.id,o=e.get(a),l=this.graph.addEdge(new SmilesDrawer.Edge(s,o,1)),g=this.graph.vertices[o];i.addChild(o),i.value.addNeighbouringElement(g.value.element),g.addChild(s),g.value.addNeighbouringElement(i.value.element),i.edges.push(l),g.edges.push(l),e.delete(a)}else e.set(a,i.id)}}var h=SmilesDrawer.SSSR.getRings(this.graph);if(null!==h){for(var t=0;t<h.length;t++)for(var d=[].concat(r(h[t])),u=this.addRing(new SmilesDrawer.Ring(d)),n=0;n<d.length;n++)this.graph.vertices[d[n]].value.rings.push(u);for(var t=0;t<this.rings.length-1;t++)for(var n=t+1;n<this.rings.length;n++){var c=this.rings[t],v=this.rings[n],p=new SmilesDrawer.RingConnection(c,v);p.vertices.size>0&&this.addRingConnection(p)}for(var t=0;t<this.rings.length;t++){var f=this.rings[t];f.neighbours=SmilesDrawer.RingConnection.getNeighbours(this.ringConnections,f.id)}for(var t=0;t<this.rings.length;t++){var m=this.rings[t];this.graph.vertices[m.members[0]].value.addAnchoredRing(m.id)}for(this.backupRingInformation();this.rings.length>0;){for(var b=-1,t=0;t<this.rings.length;t++){var S=this.rings[t];this.isPartOfBridgedRing(S.id)&&!S.isBridged&&(b=S.id)}if(-1===b)break;var w=this.getRing(b),y=this.getBridgedRingRings(w.id);this.bridgedRing=!0,this.createBridgedRing(y,w.members[0]);for(var t=0;t<y.length;t++)this.removeRing(y[t])}}}},{key:"getBridgedRingRings",value:function(e){var t=[],i=this;return function e(r){var n=i.getRing(r);t.push(r);for(var a=0;a<n.neighbours.length;a++){var s=n.neighbours[a];-1===t.indexOf(s)&&s!==r&&SmilesDrawer.RingConnection.isBridge(i.ringConnections,i.graph.vertices,r,s)&&e(s)}}(e),SmilesDrawer.ArrayHelper.unique(t)}},{key:"isPartOfBridgedRing",value:function(e){for(var t=0;t<this.ringConnections.length;t++)if(this.ringConnections[t].containsRing(e)&&this.ringConnections[t].isBridge(this.graph.vertices))return!0;return!1}},{key:"createBridgedRing",value:function(e,t){for(var i=new Set,n=new Set,a=new Set,s=0;s<e.length;s++){var o=this.getRing(e[s]);o.isPartOfBridged=!0;for(var l=0;l<o.members.length;l++)n.add(o.members[l]);for(var l=0;l<o.neighbours.length;l++){var g=o.neighbours[l];-1===e.indexOf(g)&&a.add(o.neighbours[l])}}var h=new Set,d=!0,u=!1,c=void 0;try{for(var v,p=n[Symbol.iterator]();!(d=(v=p.next()).done);d=!0){var f=v.value,m=this.graph.vertices[f],b=SmilesDrawer.ArrayHelper.intersection(e,m.value.rings);1===m.value.rings.length||1===b.length?i.add(m.id):h.add(m.id)}}catch(e){u=!0,c=e}finally{try{!d&&p.return&&p.return()}finally{if(u)throw c}}var S=[],w=!0,y=!1,R=void 0;try{for(var D,C=h[Symbol.iterator]();!(w=(D=C.next()).done);w=!0){for(var A=D.value,k=this.graph.vertices[A],L=!1,B=0;B<k.edges.length;B++)1===this.edgeRingCount(k.edges[B])&&(L=!0);L?(k.value.isBridgeNode=!0,i.add(k.id)):(k.value.isBridge=!0,i.add(k.id))}}catch(e){y=!0,R=e}finally{try{!w&&C.return&&C.return()}finally{if(y)throw R}}var V=new SmilesDrawer.Ring([].concat(r(i)));V.isBridged=!0,V.neighbours=[].concat(r(a));for(var s=0;s<e.length;s++)V.rings.push(this.getRing(e[s]).clone());this.addRing(V);for(var s=0;s<V.members.length;s++)this.graph.vertices[V.members[s]].value.bridgedRing=V.id;for(var s=0;s<S.length;s++){this.graph.vertices[S[s]].value.rings=Array()}var x=!0,N=!1,O=void 0;try{for(var P,I=i[Symbol.iterator]();!(x=(P=I.next()).done);x=!0){var M=P.value,T=this.graph.vertices[M];T.value.rings=SmilesDrawer.ArrayHelper.removeAll(T.value.rings,e),T.value.rings.push(V.id)}}catch(e){N=!0,O=e}finally{try{!x&&I.return&&I.return()}finally{if(N)throw O}}for(var s=0;s<e.length;s++)for(var l=s+1;l<e.length;l++)this.removeRingConnectionsBetween(e[s],e[l]);var W=!0,E=!1,z=void 0;try{for(var H,F=a[Symbol.iterator]();!(W=(H=F.next()).done);W=!0){for(var q=H.value,j=this.getRingConnections(q,e),l=0;l<j.length;l++)this.getRingConnection(j[l]).updateOther(V.id,q);this.getRing(q).neighbours.push(V.id)}}catch(e){E=!0,z=e}finally{try{!W&&F.return&&F.return()}finally{if(E)throw z}}return V}},{key:"areVerticesInSameRing",value:function(e,t){for(var i=0;i<e.value.rings.length;i++)for(var r=0;r<t.value.rings.length;r++)if(e.value.rings[i]===t.value.rings[r])return!0;return!1}},{key:"getCommonRings",value:function(e,t){for(var i=[],r=0;r<e.value.rings.length;r++)for(var n=0;n<t.value.rings.length;n++)e.value.rings[r]==t.value.rings[n]&&i.push(e.value.rings[r]);return i}},{key:"getLargestOrAromaticCommonRing",value:function(e,t){for(var i=this.getCommonRings(e,t),r=0,n=null,a=0;a<i.length;a++){var s=this.getRing(i[a]),o=s.getSize();if(s.isBenzeneLike(this.graph.vertices))return s;o>r&&(r=o,n=s)}return n}},{key:"getVerticesAt",value:function(e,t,i){for(var r=[],n=0;n<this.graph.vertices.length;n++){var a=this.graph.vertices[n];if(a.id!==i&&a.positioned){e.distanceSq(a.position)<=t*t&&r.push(a.id)}}return r}},{key:"getClosestVertex",value:function(e){for(var t=99999,i=null,r=0;r<this.graph.vertices.length;r++){var n=this.graph.vertices[r];if(n.id!==e.id){var a=e.position.distanceSq(n.position);a<t&&(t=a,i=n)}}return i}},{key:"addRing",value:function(e){return e.id=this.ringIdCounter++,this.rings.push(e),e.id}},{key:"removeRing",value:function(e){this.rings=this.rings.filter(function(t){return t.id!==e}),this.ringConnections=this.ringConnections.filter(function(t){return t.firstRingId!==e&&t.secondRingId!==e});for(var t=0;t<this.rings.length;t++){var i=this.rings[t];i.neighbours=i.neighbours.filter(function(t){return t!==e})}}},{key:"getRing",value:function(e){for(var t=0;t<this.rings.length;t++)if(this.rings[t].id==e)return this.rings[t]}},{key:"addRingConnection",value:function(e){return e.id=this.ringConnectionIdCounter++,this.ringConnections.push(e),e.id}},{key:"removeRingConnection",value:function(e){this.ringConnections=this.ringConnections.filter(function(t){return t.id!==e})}},{key:"removeRingConnectionsBetween",value:function(e,t){for(var i=[],r=0;r<this.ringConnections.length;r++){var n=this.ringConnections[r];(n.firstRingId===e&&n.secondRingId===t||n.firstRingId===t&&n.secondRingId===e)&&i.push(n.id)}for(var r=0;r<i.length;r++)this.removeRingConnection(i[r])}},{key:"getRingConnection",value:function(e){for(var t=0;t<this.ringConnections.length;t++)if(this.ringConnections[t].id==e)return this.ringConnections[t]}},{key:"getRingConnections",value:function(e,t){for(var i=[],r=0;r<this.ringConnections.length;r++)for(var n=this.ringConnections[r],a=0;a<t.length;a++){var s=t[a];(n.firstRingId===e&&n.secondRingId===s||n.firstRingId===s&&n.secondRingId===e)&&i.push(n.id)}return i}},{key:"getOverlapScore",value:function(){for(var e=0,t=new Float32Array(this.graph.vertices.length),i=0;i<this.graph.vertices.length;i++)t[i]=0;for(var i=0;i<this.graph.vertices.length;i++)for(var r=this.graph.vertices.length;--r>i;){var n=this.graph.vertices[i],a=this.graph.vertices[r];if(n.value.isDrawn&&a.value.isDrawn){var s=SmilesDrawer.Vector2.subtract(n.position,a.position).lengthSq();if(s<this.opts.bondLengthSq){var o=(this.opts.bondLength-Math.sqrt(s))/this.opts.bondLength;e+=o,t[i]+=o,t[r]+=o}}}for(var l=[],i=0;i<this.graph.vertices.length;i++)l.push({id:i,score:t[i]});return l.sort(function(e,t){return t.score-e.score}),{total:e,scores:l,vertexScores:t}}},{key:"chooseSide",value:function(e,t,i){for(var r=e.getNeighbours(t.id),n=t.getNeighbours(e.id),a=r.length,s=n.length,o=SmilesDrawer.ArrayHelper.merge(r,n),l=[0,0],g=0;g<o.length;g++){this.graph.vertices[o[g]].position.sameSideAs(e.position,t.position,i[0])?l[0]++:l[1]++}for(var h=[0,0],g=0;g<this.graph.vertices.length;g++){this.graph.vertices[g].position.sameSideAs(e.position,t.position,i[0])?h[0]++:h[1]++}return{totalSideCount:h,totalPosition:h[0]>h[1]?0:1,sideCount:l,position:l[0]>l[1]?0:1,anCount:a,bnCount:s}}},{key:"setRingCenter",value:function(e){for(var t=e.getSize(),i=new SmilesDrawer.Vector2,r=0;r<t;r++)i.add(this.graph.vertices[e.members[r]].position);e.center=i.divide(t)}},{key:"getSubringCenter",value:function(e,t){for(var i=t.value.originalRings,r=e.center,n=Number.MAX_VALUE,a=i.length,a=0;a<i.length;a++)for(var s=0;s<e.rings.length;s++)i[a]===e.rings[s].id&&e.rings[s].getSize()<n&&(r=e.rings[s].center,n=e.rings[s].getSize());return r}},{key:"drawEdges",value:function(e){var t=this,i=Array(this.graph.edges.length);if(i.fill(!1),this.graph.traverseBF(0,function(r){for(var n=t.graph.getEdges(r.id),a=0;a<n.length;a++){var s=n[a];i[s]||(i[s]=!0,t.drawEdge(s,e))}}),!this.bridgedRing)for(var r=0;r<this.rings.length;r++){var n=this.rings[r];this.isRingAromatic(n)&&this.canvasWrapper.drawAromaticityRing(n)}}},{key:"drawEdge",value:function(e,t){var i=this,r=this.graph.edges[e],n=this.graph.vertices[r.sourceId],a=this.graph.vertices[r.targetId],s=n.value.element,o=a.value.element;if(n.value.isDrawn&&a.value.isDrawn||"default"!==this.opts.atomVisualization){var l=n.position,g=a.position,h=this.getEdgeNormals(r),d=SmilesDrawer.ArrayHelper.clone(h);if(d[0].multiplyScalar(10).add(l),d[1].multiplyScalar(10).add(l),"="===r.bondType||"="===this.getRingbondType(n,a)||r.isPartOfAromaticRing&&this.bridgedRing){var u=this.areVerticesInSameRing(n,a),c=this.chooseSide(n,a,d);if(u){var v=this.getLargestOrAromaticCommonRing(n,a),p=v.center;h[0].multiplyScalar(i.opts.bondSpacing),h[1].multiplyScalar(i.opts.bondSpacing);var f=null;f=p.sameSideAs(n.position,a.position,SmilesDrawer.Vector2.add(l,h[0]))?new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o):new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o),f.shorten(this.opts.bondLength-this.opts.shortBondLength),r.isPartOfAromaticRing?this.canvasWrapper.drawLine(f,!0):this.canvasWrapper.drawLine(f),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}else if(r.center){h[0].multiplyScalar(i.opts.halfBondSpacing),h[1].multiplyScalar(i.opts.halfBondSpacing);var m=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o),b=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o);this.canvasWrapper.drawLine(m),this.canvasWrapper.drawLine(b)}else if(0==c.anCount&&c.bnCount>1||0==c.bnCount&&c.anCount>1){h[0].multiplyScalar(i.opts.halfBondSpacing),h[1].multiplyScalar(i.opts.halfBondSpacing);var S=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o),w=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o);this.canvasWrapper.drawLine(S),this.canvasWrapper.drawLine(w)}else if(c.sideCount[0]>c.sideCount[1]){h[0].multiplyScalar(i.opts.bondSpacing),h[1].multiplyScalar(i.opts.bondSpacing);var y=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o);y.shorten(this.opts.bondLength-this.opts.shortBondLength),this.canvasWrapper.drawLine(y),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}else if(c.sideCount[0]<c.sideCount[1]){h[0].multiplyScalar(i.opts.bondSpacing),h[1].multiplyScalar(i.opts.bondSpacing);var R=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o);R.shorten(this.opts.bondLength-this.opts.shortBondLength),this.canvasWrapper.drawLine(R),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}else if(c.totalSideCount[0]>c.totalSideCount[1]){h[0].multiplyScalar(i.opts.bondSpacing),h[1].multiplyScalar(i.opts.bondSpacing);var D=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o);D.shorten(this.opts.bondLength-this.opts.shortBondLength),this.canvasWrapper.drawLine(D),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}else if(c.totalSideCount[0]<=c.totalSideCount[1]){h[0].multiplyScalar(i.opts.bondSpacing),h[1].multiplyScalar(i.opts.bondSpacing);var C=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o);C.shorten(this.opts.bondLength-this.opts.shortBondLength),this.canvasWrapper.drawLine(C),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}}else if("#"===r.bondType){h[0].multiplyScalar(i.opts.bondSpacing/1.5),h[1].multiplyScalar(i.opts.bondSpacing/1.5);var A=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[0]),SmilesDrawer.Vector2.add(g,h[0]),s,o),k=new SmilesDrawer.Line(SmilesDrawer.Vector2.add(l,h[1]),SmilesDrawer.Vector2.add(g,h[1]),s,o);this.canvasWrapper.drawLine(A),this.canvasWrapper.drawLine(k),this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o))}else if("."===r.bondType);else{var L=n.value.bracket&&n.value.bracket.chirality,B=a.value.bracket&&a.value.bracket.chirality;"up"===r.chiral?this.canvasWrapper.drawWedge(new SmilesDrawer.Line(l,g,s,o,L,B)):"down"===r.chiral?this.canvasWrapper.drawDashedWedge(new SmilesDrawer.Line(l,g,s,o,L,B)):this.canvasWrapper.drawLine(new SmilesDrawer.Line(l,g,s,o,L,B))}if(t){var V=SmilesDrawer.Vector2.midpoint(l,g);this.canvasWrapper.drawDebugText(V.x,V.y,"e: "+e)}}}},{key:"drawVertices",value:function(e){for(var t=this.graph.vertices.length,t=0;t<this.graph.vertices.length;t++){var i=this.graph.vertices[t],r=i.value,n=0,a=0,s=this.getBondCount(i),o=r.element,l=SmilesDrawer.Atom.maxBonds[o]-s,g=i.getTextDirection(this.graph.vertices),h=!(!this.opts.terminalCarbons&&"C"===o&&!r.hasAttachedPseudoElements)&&i.isTerminal(),d="C"===r.element;if(r.bracket&&(l=r.bracket.hcount,n=r.bracket.charge,a=r.bracket.isotope),"allballs"===this.opts.atomVisualization)this.canvasWrapper.drawBall(i.position.x,i.position.y,o);else if(r.isDrawn&&(!d||r.drawExplicit||h||r.hasAttachedPseudoElements))"default"===this.opts.atomVisualization?this.canvasWrapper.drawText(i.position.x,i.position.y,o,l,g,h,n,a,r.getAttachedPseudoElements()):"balls"===this.opts.atomVisualization&&this.canvasWrapper.drawBall(i.position.x,i.position.y,o);else if(2===i.getNeighbourCount()&&1==i.forcePositioned){var u=this.graph.vertices[i.neighbours[0]].position,c=this.graph.vertices[i.neighbours[1]].position,v=SmilesDrawer.Vector2.threePointangle(i.position,u,c);Math.abs(Math.PI-v)<.1&&this.canvasWrapper.drawPoint(i.position.x,i.position.y,o)}if(e){var p="v: "+i.id+" "+SmilesDrawer.ArrayHelper.print(r.ringbonds);this.canvasWrapper.drawDebugText(i.position.x,i.position.y,p)}}if(this.opts.debug)for(var t=0;t<this.rings.length;t++){var f=this.rings[t].center;this.canvasWrapper.drawDebugPoint(f.x,f.y,"r: "+this.rings[t].id)}}},{key:"position",value:function(){for(var e=null,t=0;t<this.graph.vertices.length;t++)if(null!==this.graph.vertices[t].value.bridgedRing){e=this.graph.vertices[t];break}for(var t=0;t<this.rings.length;t++)this.rings[t].isBridged&&(e=this.graph.vertices[this.rings[t].members[0]]);this.rings.length>0&&null===e&&(e=this.graph.vertices[this.rings[0].members[0]]),null===e&&(e=this.graph.vertices[0]),this.createNextBond(e)}},{key:"backupRingInformation",value:function(){this.originalRings=[],this.originalRingConnections=[];for(var e=0;e<this.rings.length;e++)this.originalRings.push(this.rings[e]);for(var e=0;e<this.ringConnections.length;e++)this.originalRingConnections.push(this.ringConnections[e]);for(var e=0;e<this.graph.vertices.length;e++)this.graph.vertices[e].value.backupRings()}},{key:"restoreRingInformation",value:function(){var e=this.getBridgedRings();this.rings=[],this.ringConnections=[];for(var t=0;t<e.length;t++)for(var i=e[t],r=0;r<i.rings.length;r++){var n=i.rings[r];this.originalRings[n.id].center=n.center}for(var t=0;t<this.originalRings.length;t++)this.rings.push(this.originalRings[t]);for(var t=0;t<this.originalRingConnections.length;t++)this.ringConnections.push(this.originalRingConnections[t]);for(var t=0;t<this.graph.vertices.length;t++)this.graph.vertices[t].value.restoreRings()}},{key:"createRing",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if(!e.positioned){t=t||new SmilesDrawer.Vector2(0,0);var n=e.getOrderedNeighbours(this.ringConnections),a=i?SmilesDrawer.Vector2.subtract(i.position,t).angle():0,s=o.default.polyCircumradius(this.opts.bondLength,e.getSize()),l=o.default.centralAngle(e.getSize());e.centralAngle=l;var g=a,h=this,d=i?i.id:null;-1===e.members.indexOf(d)&&(i&&(i.positioned=!1),d=e.members[0]);var u=Array();if(e.isBridged){this.graph.kkLayout(e.members.slice(),u,t,i.id,e,this.opts.bondLength),e.positioned=!0,this.setRingCenter(e),t=e.center;for(var c=0;c<e.rings.length;c++)this.setRingCenter(e.rings[c])}else e.eachMember(this.graph.vertices,function(i){var r=h.graph.vertices[i];r.positioned||r.setPosition(t.x+Math.cos(g)*s,t.y+Math.sin(g)*s),g+=l,(!e.isBridged||e.rings.length<3)&&(r.positioned=!0)},d,r?r.id:null);e.positioned=!0,e.center=t;for(var c=0;c<n.length;c++){var v=this.getRing(n[c].neighbour);if(!v.positioned){var p=SmilesDrawer.RingConnection.getVertices(this.ringConnections,e.id,v.id);if(2===p.length){e.isFused=!0,v.isFused=!0;var f=this.graph.vertices[p[0]],m=this.graph.vertices[p[1]],b=SmilesDrawer.Vector2.midpoint(f.position,m.position),S=SmilesDrawer.Vector2.normals(f.position,m.position);S[0].normalize(),S[1].normalize();var w=o.default.polyCircumradius(this.opts.bondLength,v.getSize()),y=o.default.apothem(w,v.getSize());S[0].multiplyScalar(y).add(b),S[1].multiplyScalar(y).add(b);var R=S[0];SmilesDrawer.Vector2.subtract(t,S[1]).lengthSq()>SmilesDrawer.Vector2.subtract(t,S[0]).lengthSq()&&(R=S[1]);var D=SmilesDrawer.Vector2.subtract(f.position,R),C=SmilesDrawer.Vector2.subtract(m.position,R);-1===D.clockwise(C)?v.positioned||this.createRing(v,R,f,m):v.positioned||this.createRing(v,R,m,f)}else if(1===p.length){e.isSpiro=!0,v.isSpiro=!0;var A=this.graph.vertices[p[0]],k=SmilesDrawer.Vector2.subtract(t,A.position);k.invert(),k.normalize();var L=o.default.polyCircumradius(this.opts.bondLength,v.getSize());k.multiplyScalar(L),k.add(A.position),v.positioned||this.createRing(v,k,A)}}}for(var c=0;c<e.members.length;c++)for(var B=this.graph.vertices[e.members[c]],V=B.getNeighbours(),x=0;x<V.length;x++){var N=this.graph.vertices[V[x]];N.positioned||(N.value.isConnectedToRing=!0,this.createNextBond(N,B,this.getSubringCenter(e,B)))}for(var c=0;c<u.length;c++){var O=this.graph.vertices[u[c][1]],P=this.graph.vertices[u[c][0]];P.previousPosition=O.position,this.createNextBond(P,O,0,0,!0)}}}},{key:"rotateSubtree",value:function(e,t,i,r){var n=this;this.traverseTree(e,t,function(e){e.position.rotateAround(i,r);for(var t=0;t<e.value.anchoredRings.length;t++){var a=n.rings[e.value.anchoredRings[t]];a&&a.center.rotateAround(i,r)}})}},{key:"getSubtreeOverlapScore",value:function(e,t,i){var r=this,n=0,a=new SmilesDrawer.Vector2;return this.traverseTree(e,t,function(e){var t=i[e.id];n+=t;var s=r.graph.vertices[e.id].position.clone();s.multiplyScalar(t),a.add(s)}),a.divide(n),{value:n,center:a}}},{key:"getCurrentCenterOfMass",value:function(){for(var e=new SmilesDrawer.Vector2,t=0,i=0;i<this.graph.vertices.length;i++){var r=this.graph.vertices[i];r.positioned&&(e.add(r.position),t++)}return e.divide(t)}},{key:"getCurrentCenterOfMassInNeigbourhood",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2*this.opts.bondLength,i=new SmilesDrawer.Vector2,r=0,n=t*t,a=0;a<this.graph.vertices.length;a++){var s=this.graph.vertices[a];s.positioned&&e.distanceSq(s.position)<n&&(i.add(s.position),r++)}return i.divide(r)}},{key:"resolvePrimaryOverlaps",value:function(){for(var e=[],t=Array(this.graph.vertices.length),i=0;i<this.rings.length;i++)for(var r=this.rings[i],n=0;n<r.members.length;n++){var a=this.graph.vertices[r.members[n]];if(!t[a.id]){t[a.id]=!0;var s=this.getNonRingNeighbours(a.id);if(s.length>1){for(var o=[],l=0;l<a.value.rings.length;l++)o.push(a.value.rings[l]);e.push({common:a,rings:o,vertices:s})}}}for(var i=0;i<e.length;i++){var g=e[i];if(2===g.vertices.length){var h=g.vertices[0],d=g.vertices[1];if(!h.value.isDrawn||!d.value.isDrawn)continue;var u=(2*Math.PI-this.getRing(g.rings[0]).getAngle())/6;this.rotateSubtree(h.id,g.common.id,u,g.common.position),this.rotateSubtree(d.id,g.common.id,-u,g.common.position);var c=this.getOverlapScore(),v=this.getSubtreeOverlapScore(h.id,g.common.id,c.vertexScores),p=this.getSubtreeOverlapScore(d.id,g.common.id,c.vertexScores),f=v.value+p.value;this.rotateSubtree(h.id,g.common.id,-2*u,g.common.position),this.rotateSubtree(d.id,g.common.id,2*u,g.common.position),c=this.getOverlapScore(),v=this.getSubtreeOverlapScore(h.id,g.common.id,c.vertexScores),p=this.getSubtreeOverlapScore(d.id,g.common.id,c.vertexScores),v.value+p.value>f&&(this.rotateSubtree(h.id,g.common.id,2*u,g.common.position),this.rotateSubtree(d.id,g.common.id,-2*u,g.common.position))}}}},{key:"resolveSecondaryOverlaps",value:function(e){for(var t=0;t<e.length;t++)if(e[t].score>this.opts.bondLength/(4*this.opts.bondLength)){var i=this.graph.vertices[e[t].id];if(i.isTerminal()){var r=this.getClosestVertex(i);if(r){var n=null;n=r.isTerminal()?0===r.id?this.graph.vertices[1].position:r.previousPosition:0===r.id?this.graph.vertices[1].position:r.position;var a=0===i.id?this.graph.vertices[1].position:i.previousPosition;i.position.rotateAwayFrom(n,a,o.default.toRad(20))}}}}},{key:"createNextBond",value:function(e,t,i,r){var n=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!e.positioned||n){if(!n)if(t)if(1===t.value.originalRings.length){for(var a=Array(),s=t.getNeighbours(),l=0;l<s.length;l++){var g=this.graph.vertices[s[l]];g.positioned&&g.value.originalRings.length>0&&a.push(SmilesDrawer.Vector2.subtract(g.position,t.position))}var h=SmilesDrawer.Vector2.averageDirection(a);e.setPositionFromVector(h.invert().multiplyScalar(this.opts.bondLength).add(t.position)),e.previousPosition=t.position,e.positioned=!0}else if(t.value.originalRings.length>1){for(var d=Array(),u=t.getNeighbours(),l=0;l<u.length;l++){var c=this.graph.vertices[u[l]];c.positioned&&c.value.originalRings.length>1&&d.push(SmilesDrawer.Vector2.subtract(c.position,t.position))}var v=SmilesDrawer.Vector2.averageDirection(d);v.invert().multiplyScalar(this.opts.bondLength).add(t.position);for(var l=0;l<u.length;l++){var p=this.graph.vertices[u[l]];if(p.positioned&&SmilesDrawer.Vector2.threePointangle(v,t.position,p.position)>3.1){v.rotateAround(Math.PI,t.position);break}}e.previousPosition=t.position,e.setPositionFromVector(v),e.positioned=!0}else{var f=new SmilesDrawer.Vector2(this.opts.bondLength,0);f.rotate(i),f.add(t.position),e.globalAngle=i,e.setPositionFromVector(f),e.previousPosition=t.position,e.positioned=!0}else{var m=new SmilesDrawer.Vector2(this.opts.bondLength,0);m.rotate(o.default.toRad(-120)),e.previousPosition=m,e.setPosition(this.opts.bondLength,0),e.angle=o.default.toRad(-120),e.globalAngle=e.angle,null===e.value.bridgedRing&&(e.positioned=!0)}if(null!==e.value.bridgedRing){var b=this.getRing(e.value.bridgedRing),S=SmilesDrawer.Vector2.subtract(e.previousPosition,e.position);S.invert(),S.normalize();var w=o.default.polyCircumradius(this.opts.bondLength,b.members.length);S.multiplyScalar(w),S.add(e.position),b.positioned||this.createRing(b,S,e)}else if(e.value.rings.length>0){var y=this.getRing(e.value.rings[0]),R=SmilesDrawer.Vector2.subtract(e.previousPosition,e.position);R.invert(),R.normalize();var D=o.default.polyCircumradius(this.opts.bondLength,y.getSize());R.multiplyScalar(D),R.add(e.position),y.positioned||this.createRing(y,R,e)}else{var C=e.getNeighbours();t&&(C=SmilesDrawer.ArrayHelper.remove(C,t.id));var A=e.getAngle();if(1===C.length){var k=this.graph.vertices[C[0]];if("#"===e.value.bondType||t&&"#"===t.value.bondType||"="===e.value.bondType&&t&&"="===t.value.bondType){if(e.value.drawExplicit=!1,t){var L=this.graph.getEdge(e.id,t.id);L.center=!0}var B=this.graph.getEdge(e.id,k.id);B.center=!0,k.drawExplicit=!0,k.globalAngle=A,k.angle=0,this.createNextBond(k,e,k.globalAngle,-r)}else if(t&&t.value.rings.length>0){var V=o.default.toRad(60),x=-V,N=new SmilesDrawer.Vector2(this.opts.bondLength,0),O=new SmilesDrawer.Vector2(this.opts.bondLength,0);N.rotate(V).add(e.position),O.rotate(x).add(e.position);var P=this.getCurrentCenterOfMass(),I=N.distanceSq(P),M=O.distanceSq(P);k.angle=I<M?x:V,
r=k.angle>0?-1:1,k.globalAngle=A+k.angle,this.createNextBond(k,e,k.globalAngle,r)}else{if(r)k.angle=o.default.toRad(60)*r,r=-r;else{var T=o.default.toRad(60),W=-T,E=new SmilesDrawer.Vector2(this.opts.bondLength,0),z=new SmilesDrawer.Vector2(this.opts.bondLength,0);E.rotate(T).add(e.position),z.rotate(W).add(e.position);var H=this.getCurrentCenterOfMass(),F=E.distanceSq(H),q=z.distanceSq(H);k.angle=F<q?W:T,r=k.angle>0?-1:1}k.globalAngle=A+k.angle,this.createNextBond(k,e,k.globalAngle,r)}}else if(2===C.length){var j=this.getTreeDepth(C[0],e.id),_=this.getTreeDepth(C[1],e.id),U=this.getTreeDepth(t?t.id:null,e.id),G=0,K=1;j>_&&(G=1,K=0);var X=this.graph.vertices[C[G]],Z=this.graph.vertices[C[K]];U<j&&U<_?1===e.position.clockwise(e.previousPosition)?(Z.angle=o.default.toRad(60),X.angle=-o.default.toRad(60),Z.globalAngle=A+Z.angle,X.globalAngle=A+X.angle,this.createNextBond(Z,e,Z.globalAngle,-r),this.createNextBond(X,e,X.globalAngle,r)):(Z.angle=-o.default.toRad(60),X.angle=o.default.toRad(60),Z.globalAngle=A+Z.angle,X.globalAngle=A+X.angle,this.createNextBond(X,e,X.globalAngle,r),this.createNextBond(Z,e,Z.globalAngle,-r)):1===e.position.clockwise(e.previousPosition)?(Z.angle=o.default.toRad(60),X.angle=-o.default.toRad(60),Z.globalAngle=A+Z.angle,X.globalAngle=A+X.angle,this.createNextBond(Z,e,Z.globalAngle,-r),this.createNextBond(X,e,X.globalAngle,-r)):(Z.angle=-o.default.toRad(60),X.angle=o.default.toRad(60),Z.globalAngle=A+Z.angle,X.globalAngle=A+X.angle,this.createNextBond(X,e,X.globalAngle,-r),this.createNextBond(Z,e,Z.globalAngle,-r))}else if(3===C.length){var $=this.getTreeDepth(C[0],e.id),J=this.getTreeDepth(C[1],e.id),Q=this.getTreeDepth(C[2],e.id),Y=this.graph.vertices[C[0]],ee=this.graph.vertices[C[1]],te=this.graph.vertices[C[2]];if(J>$&&J>Q?(Y=this.graph.vertices[C[1]],ee=this.graph.vertices[C[0]],te=this.graph.vertices[C[2]]):Q>$&&Q>J&&(Y=this.graph.vertices[C[2]],ee=this.graph.vertices[C[0]],te=this.graph.vertices[C[1]]),1===this.getTreeDepth(ee.id,e.id)&&1===this.getTreeDepth(te.id,e.id)&&this.getTreeDepth(Y.id,e.id)>1){if(r)Y.angle=o.default.toRad(60)*r,r=-r;else{var ie=o.default.toRad(60),re=-ie,ne=new SmilesDrawer.Vector2(this.opts.bondLength,0),ae=new SmilesDrawer.Vector2(this.opts.bondLength,0);ne.rotate(ie).add(e.position),ae.rotate(re).add(e.position);var se=this.getCurrentCenterOfMass(),oe=ne.distanceSq(se),le=ae.distanceSq(se);Y.angle=oe<le?re:ie,r=Y.angle>0?-1:1}Y.globalAngle=A+Y.angle,this.createNextBond(Y,e,Y.globalAngle,-r),e.value.bracket&&"@@"===e.value.bracket.chirality?(te.angle=o.default.toRad(30)*r,ee.angle=o.default.toRad(90)*r,te.globalAngle=A+te.angle,ee.globalAngle=A+ee.angle,this.createNextBond(te,e,te.globalAngle),this.createNextBond(ee,e,ee.globalAngle)):(ee.angle=o.default.toRad(30)*r,te.angle=o.default.toRad(90)*r,ee.globalAngle=A+ee.angle,te.globalAngle=A+te.angle,this.createNextBond(ee,e,ee.globalAngle),this.createNextBond(te,e,te.globalAngle))}else Y.angle=0,ee.angle=o.default.toRad(90),te.angle=-o.default.toRad(90),Y.globalAngle=A+Y.angle,ee.globalAngle=A+ee.angle,te.globalAngle=A+te.angle,this.createNextBond(Y,e,Y.globalAngle),this.createNextBond(ee,e,ee.globalAngle),this.createNextBond(te,e,te.globalAngle)}else if(4===C.length){var ge=this.getTreeDepth(C[0],e.id),he=this.getTreeDepth(C[1],e.id),de=this.getTreeDepth(C[2],e.id),ue=this.getTreeDepth(C[3],e.id),ce=this.graph.vertices[C[0]],ve=this.graph.vertices[C[1]],pe=this.graph.vertices[C[2]],fe=this.graph.vertices[C[3]];he>ge&&he>de&&he>ue?(ce=this.graph.vertices[C[1]],ve=this.graph.vertices[C[0]],pe=this.graph.vertices[C[2]],fe=this.graph.vertices[C[3]]):de>ge&&de>he&&de>ue?(ce=this.graph.vertices[C[2]],ve=this.graph.vertices[C[0]],pe=this.graph.vertices[C[1]],fe=this.graph.vertices[C[3]]):ue>ge&&ue>he&&ue>de&&(ce=this.graph.vertices[C[3]],ve=this.graph.vertices[C[0]],pe=this.graph.vertices[C[1]],fe=this.graph.vertices[C[2]]),ce.angle=-o.default.toRad(36),ve.angle=o.default.toRad(36),pe.angle=-o.default.toRad(108),fe.angle=o.default.toRad(108),ce.globalAngle=A+ce.angle,ve.globalAngle=A+ve.angle,pe.globalAngle=A+pe.angle,fe.globalAngle=A+fe.angle,this.createNextBond(ce,e,ce.globalAngle),this.createNextBond(ve,e,ve.globalAngle),this.createNextBond(pe,e,pe.globalAngle),this.createNextBond(fe,e,fe.globalAngle)}}}}},{key:"getCommonRingbondNeighbour",value:function(e){for(var t=e.getNeighbours(),i=0;i<t.length;i++){var r=this.graph.vertices[t[i]];if(SmilesDrawer.ArrayHelper.All(r.value.rings,e.value.rings))return r}return null}},{key:"isPointInRing",value:function(e){for(var t=0;t<this.rings.length;t++){var i=this.rings[t];if(i.positioned){var r=o.default.polyCircumradius(this.opts.bondLength,i.getSize()),n=r*r;if(e.distanceSq(i.center)<n)return!0}}return!1}},{key:"isEdgeInRing",value:function(e){var t=this.graph.vertices[e.sourceId],i=this.graph.vertices[e.targetId];return this.areVerticesInSameRing(t,i)}},{key:"isEdgeRotatable",value:function(e){var t=this.graph.vertices[e.sourceId],i=this.graph.vertices[e.targetId];return"-"===e.bondType&&(!(t.getNeighbourCount()+i.getNeighbourCount()<5)&&!(t.value.rings.length>0&&i.value.rings.length>0&&this.areVerticesInSameRing(t,i)))}},{key:"isRingAromatic",value:function(e){for(var t=0;t<e.members.length;t++){if(!this.graph.vertices[e.members[t]].value.isPartOfAromaticRing)return!1}return!0}},{key:"getEdgeNormals",value:function(e){var t=this.graph.vertices[e.sourceId].position,i=this.graph.vertices[e.targetId].position;return SmilesDrawer.Vector2.units(t,i)}},{key:"getTreeDepth",value:function(e,t){if(null===e||null===t)return 0;for(var i=this.graph.vertices[e].getSpanningTreeNeighbours(t),r=0,n=0;n<i.length;n++){var a=i[n],s=this.getTreeDepth(a,e);s>r&&(r=s)}return r+1}},{key:"traverseTree",value:function(e,t,i){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,n=arguments.length>4&&void 0!==arguments[4]&&arguments[4],a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:[];if(!(null!==r&&a>r+1)){for(var o=0;o<s.length;o++)if(s[o]===e)return;s.push(e);var l=this.graph.vertices[e],g=l.getNeighbours(t);(!n||a>1)&&i(l);for(var h=0;h<g.length;h++)this.traverseTree(g[h],e,i,r,n,a+1,s)}}},{key:"getBondCount",value:function(e){for(var t=0,i=0;i<e.edges.length;i++)t+=this.graph.edges[e.edges[i]].getBondCount();return t}},{key:"getNonRingNeighbours",value:function(e){for(var t=[],i=this.graph.vertices[e],r=i.getNeighbours(),n=0;n<r.length;n++){var a=this.graph.vertices[r[n]];0===SmilesDrawer.ArrayHelper.intersection(i.value.rings,a.value.rings).length&&0==a.value.isBridge&&t.push(a)}return t}},{key:"annotateStereochemistry",value:function(){for(var e=this,t=0;t<this.graph.vertices.length;t++){var i,i;(function(){var r=e.graph.vertices[t];if(!r.value.bracket||!r.value.bracket.chirality)return"continue";var n=r.getNeighbours();n.sort();var a=n.length,s=Array(a);for(i=0;i<a;i++){var l=new Uint8Array(e.graph.vertices.length),g=new Uint16Array(21);l[r.id]=1,e.visitStereochemistry(n[i],l,g,10,0),g[20]=n[i],s[i]=[i,g]}s.sort(function(e,t){for(var i=0;i<a;i++){if(e[1][i]>t[1][i])return-1;if(e[1][i]<t[1][i])return 1}return 0});var h=new Uint8Array(a);for(i=0;i<a;i++)h[i]=s[i][0];console.log(h),console.log(r.id,o.default.parityOfPermutation(h))})()}}},{key:"visitStereochemistry",value:function(e,t,i,r,n){t[e]=1;var a=this.graph.vertices[e].value.getAtomicNumber();i[r+n]+=a,i[n]=Math.max(i[n],a);for(var s=this.graph.vertices[e].getNeighbours(),o=0;o<s.length;o++)1!==t[s[o]]&&n<r-1&&this.visitStereochemistry(s[o],t,i,r,n+1)}},{key:"initPseudoElements",value:function(){for(var e=0;e<this.graph.vertices.length;e++){for(var t=this.graph.vertices[e],i=t.getNeighbours(),r=[],n=0;n<i.length;n++)r.push(this.graph.vertices[i[n]]);if(!(t.getNeighbourCount()<3||t.value.rings.length>0)){for(var a=0,s=0,n=0;n<r.length;n++){var o=r[n],l=o.value.element,g=o.getNeighbourCount();"C"!==l&&"H"!==l&&1===g&&a++,g>1&&s++}if(!(s>1||a<2)){for(var h=null,n=0;n<r.length;n++){var d=r[n];d.getNeighbourCount()>1&&(h=d)}for(var n=0;n<r.length;n++){var u=r[n];if(!(u.getNeighbourCount()>1)){u.value.isDrawn=!1;var c=SmilesDrawer.Atom.maxBonds[u.value.element]-this.getBondCount(u);u.value.bracket&&(c=u.value.bracket.hcount),t.value.attachPseudoElement(u.value.element,h?h.value.element:null,c)}}}}}for(var e=0;e<this.graph.vertices.length;e++){var v=this.graph.vertices[e],p=v.value,f=p.element;if("C"!==f&&"H"!==f&&p.isDrawn){for(var m=v.getNeighbours(),b=[],n=0;n<m.length;n++)b.push(this.graph.vertices[m[n]]);for(var n=0;n<b.length;n++){var S=b[n].value;if(S.hasAttachedPseudoElements&&2===S.getAttachedPseudoElementsCount()){var w=S.getAttachedPseudoElements();w.hasOwnProperty("0O")&&w.hasOwnProperty("3C")&&(S.isDrawn=!1,v.value.attachPseudoElement("Ac","",0))}}}}}}]),e}();i.default=l},{"./MathHelper":3}],3:[function(e,t,i){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(i,"__esModule",{value:!0});var n=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}(),a=function(){function e(){r(this,e)}return n(e,null,[{key:"round",value:function(e,t){return t=t||1,Number(Math.round(e+"e"+t)+"e-"+t)}},{key:"meanAngle",value:function(e){for(var t=0,i=0,r=0;r<e.length;r++)t+=Math.sin(e[r]),i+=Math.cos(e[r]);return Math.atan2(t/e.length,i/e.length)}},{key:"innerAngle",value:function(e){return SmilesDrawer.MathHelper.toRad(180*(e-2)/e)}},{key:"polyCircumradius",value:function(e,t){return e/(2*Math.sin(Math.PI/t))}},{key:"apothem",value:function(e,t){return e*Math.cos(Math.PI/t)}},{key:"apothemFromSideLength",value:function(e,t){var i=SmilesDrawer.MathHelper.polyCircumradius(e,t);return SmilesDrawer.MathHelper.apothem(i,t)}},{key:"centralAngle",value:function(e){return SmilesDrawer.MathHelper.toRad(360/e)}},{key:"toDeg",value:function(e){return e*SmilesDrawer.MathHelper.degFactor}},{key:"toRad",value:function(e){return e*SmilesDrawer.MathHelper.radFactor}},{key:"parityOfPermutation",value:function(e){for(var t=new Uint8Array(e.length),i=0,r=0;r<e.length;r++)if(1!==t[r]){var n=function i(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return 1===t[r]?n:(n++,t[r]=1,i(e[r],n))}(r);i+=1-n%2}return i%2?-1:1}}]),e}();i.default=a,SmilesDrawer.MathHelper.radFactor=Math.PI/180,SmilesDrawer.MathHelper.degFactor=180/Math.PI,SmilesDrawer.MathHelper.twoPI=2*Math.PI},{}]},{},[1]);
//# sourceMappingURL=smiles-drawer.min.js.map
